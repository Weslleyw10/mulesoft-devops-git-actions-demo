name: Test, Build And Deploy to QA
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
env:
  version_control: ${{ vars.VERSION_CONTROL_QA }}
  nexus_username: ${{vars.NEXUS_USER}}
  nexus_password: ${{secrets.NEXUS_PASSWORD}}
  conn_app_exchange_id: ${{vars.CONN_APP_EXCHANGE_CLIENT_ID}}
  conn_app_exchange_secret: ${{secrets.CONN_APP_EXCHANGE_CLIENT_SECRET}}
  conn_app_client_id: ${{vars.CONN_APP_CLIENT_ID}}
  conn_app_client_secret: ${{secrets.CONN_APP_CLIENT_SECRET}}
  anypoint_platform_id: ${{vars.ANYPOINT_PLATFORM_CLIENT_ID}}
  anypoint_platform_secret: ${{secrets.ANYPOINT_PLATFORM_CLIENT_SECRET}}
  mule_env: ${{vars.MULE_ENV}}
  anypoint_platform_visualizer_layer: ${{vars.ANYPOINT_PLATFORM_VISUALIZER_LAYER}}
  runtime_key: ${{secrets.RUNTIME_KEY}}
  vcores: ${{vars.VCORES}}
  replicas: ${{vars.REPLICAS}}
  target: ${{vars.TARGET}}
  environment: ${{vars.ENVIRONMENT}} 
  java_version: ${{vars.JAVA_VERSION}}
  release_channel: ${{vars.RELEASE_CHANNEL}}
  business_group_id: ${{vars.BUSINESS_GROUP_ID}}
  business_group: ${{vars.BUSINESS_GROUP}}
  mule_version: ${{vars.MULE_VERSION}}
  clustered: ${{vars.CLUSTERED}}
jobs:
  test:
    runs-on: ubuntu-latest
    environment: qa   
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8
    - name: Test with Maven
      run: mvn -version --settings .maven/settings.xml -Druntime.key="${{ env.runtime_key }}"
    - name: Upload MUnit reports
      uses: actions/upload-artifact@v3
      with:
        name: munit-test-reports
        path: target/site/munit/coverage/
